import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.hujiang.android-aspectjx'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply from: 'tinker.gradle'


def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.liuzhao.muzik"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 6
        versionName "1.0.6"
        multiDexEnabled true
//        multiDexKeepProguard file("tinkerMultidexKeep.pro") //keep specific classes using proguard syntax
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    kapt {
        generateStubs = true
    }

    signingConfigs {
        release {
            try {
                Properties properties = new Properties()
                properties.load(project.rootProject.file('local.properties').newDataInputStream())
                storeFile file("./keystore/release.jks")
                storePassword properties.getProperty("keyPassword")
                keyAlias properties.getProperty("keyAlias")
                keyPassword properties.getProperty("keyPassword")
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }

    buildTypes {
        release {

            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), project.file('proguard-rules.pro')
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmm")
        def dateFlag = dateFormat.format(new Date())
        variant.outputs.all {
            def newName = "muzik v" + variant.versionName + " [build" + dateFlag + "].apk"
            outputFileName = newName
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    externalNativeBuild{
//        ndkBuild {
//            path "src/main/jni/Android.mk"
//        }
//    }

    sourceSets {
        main {
            jniLibs.srcDirs 'src/main/libs'
            jni.srcDirs = []
        }
    }
    dexOptions {
        //支持大型项目
        jumboMode = true
    }
    buildToolsVersion '28.0.3'
    repositories{
        flatDir{
            dirs 'libs'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "io.reactivex:rxjava:$rx_version"
    implementation "io.reactivex:rxandroid:$rx_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation 'com.orhanobut:logger:1.15'
//        annotationProcessor project(path: ':ioc-complier')
    kapt project(path: ':ioc-complier')
    implementation project(':ioc-api')
    implementation project(':ioc-annotations')
    implementation project(':okevent')
//    implementation project(':libyuv')

    implementation 'org.aspectj:aspectjrt:1.8.13'
    implementation 'pub.devrel:easypermissions:1.2.0'
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.imyeego.promise:promise-all:1.0.5'
    implementation 'com.github.ikidou:TypeBuilder:1.0'
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation 'com.hjq:toast:8.8'
    implementation 'com.github.lihangleo2:ShadowLayout:3.0.4'

    api("com.tencent.tinker:tinker-android-lib:$tinker_version") { changing = true }
    // Maven local cannot handle transist dependencies.
    implementation("com.tencent.tinker:tinker-android-loader:$tinker_version") { changing = true }
    annotationProcessor("com.tencent.tinker:tinker-android-anno:$tinker_version") { changing = true }
    compileOnly("com.tencent.tinker:tinker-android-anno:$tinker_version") { changing = true }
    implementation(name:'libyuv', ext:'aar')
}
